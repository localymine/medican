<?phpsession_start();$counter = 1;$parse_uri = explode( 'wp-content', $_SERVER['SCRIPT_FILENAME'] );require_once( $parse_uri[0] . 'wp-load.php' );require_once( get_stylesheet_directory().'/sendmail.php' );if(isset($_POST['type']) && ($_POST['type']=='register')){parse_str($_POST['registrationform'], $formharray);$useremail = $formharray['regemail'];$userphone = $formharray['regphone'];if(email_exists($useremail )){$existmail = 1;}global $wpdb;$results = $wpdb->get_results('select * from `wp_usermeta` where meta_key = "user_phone" and meta_value = "'.$userphone.'"');$error='';if(($results) || ($existmail) || (empty($_SESSION['captcha_code'] ) || strcasecmp($_SESSION['captcha_code'], $_POST['captcha_code']) != 0)){if(($results) && (!$existmail)){$error = 'Phone number already exist.';}if(($existmail) && (!$results)){$error .='Email already exist.';}if(($existmail) && ($results)){$error .='Email & Phone already exist.';}if((empty($_SESSION['captcha_code'] ) || strcasecmp($_SESSION['captcha_code'], $_POST['captcha_code']) != 0)){if($error!=''){$error .='<br>Wrong Captcha.';}else {$error .='Wrong Captcha.';}}$errorarray = array("error"=>'1',"message"=> $error,"type"=>'register');echo json_encode($errorarray);}else{$_SESSION["start"] = null;$_SESSION['start'] = time();unset($_SESSION['code_value']);unset($_SESSION['newcode_value']);if(!isset($_SESSION['code_value'])){$_SESSION['code_value'] = $_SESSION['start'] + (3600) ;$digits = 4;$_SESSION['newcode_value']  = str_pad(rand(0, pow(10, $digits)-1), $digits, '0', STR_PAD_LEFT);}$now = time();if($now > $_SESSION['code_value']){unset($_SESSION['code_value']);unset($_SESSION['newcode_value']);$codearray = array("error"=>'0',"message"=> 'expire',"type"=>'register');echo json_encode($codearray);}else {$codearray = array("error"=>'0',"message"=> $_SESSION['newcode_value'],"type"=>'register',"userphone"=>$userphone);echo json_encode($codearray);}}}else if(isset($_POST['type']) && ($_POST['type']=='activate')){if(isset($_POST['code']) && ($_POST['code']!='')){$now = time();if($now > $_SESSION['code_value']){ $error = 1;if(($_SESSION['newcode_value'])==($_POST['code'])){$code_error ='Expired OTP code.';}else {$code_error ='Wrong OTP code.';}}else {if(($_SESSION['newcode_value'])==($_POST['code'])){ function generatePIN($digits = 4){            $i = 0; //counter            $pin = ""; //our default pin is blank.            while($i < $digits){                //generate a random number between 0 and 9.                $pin .= mt_rand(0, 9);                $i++;            }            return $pin;        }function randomString($length = 3) {    $str = "";    $characters = array_merge(range('A','Z'));    $max = count($characters) - 1;    for ($i = 0; $i < $length; $i++) {     $rand = mt_rand(0, $max);     $str .= $characters[$rand];    }    return $str;} $pin = generatePIN(4);$alpha = randomString(3);$consumer_id = $alpha.$pin;global $wpdb;$consumerid = $wpdb->get_results('select * from `wp_usermeta` where meta_key = "consumer_id" and meta_value = "'.$consumer_id.'"');if($consumerid){$pin = generatePIN(5);$alpha = randomString(3);$consumer_id = $alpha.$pin; }    parse_str($_POST['registrationform'], $searcharray);$username =  $searcharray['regname'];$useremail = $searcharray['regemail'];$userphone = $searcharray['regphone'];$userpass =  $searcharray['regpassword'];$userdata = array('user_login' => $useremail,'user_email' => $useremail,'user_pass' =>  $userpass);$register_user = wp_insert_user($userdata);add_user_meta($register_user,'user_phone',$userphone);add_user_meta($register_user,'fullname',$username);add_user_meta($register_user,'custom_capability', 'customer');add_user_meta($register_user,'domain', 'tbi');add_user_meta($register_user,'consumer_id', $consumer_id);$obj = new sendMail();$emailmessage = 'Hello '.$useremail.', thanks for your registration. Your phone to sign in is '.$userphone.', and your Consumer ID to make transactions is '.$consumer_id.'.';$obj->customSendmail($useremail,'Registation',$emailmessage);$code_error ='User Successfully Register';$error = 0;}else {$error = 1;$code_error ='Wrong OTP code.';}}}else{ $error=1;$code_error ="Please enter the OTP Code.";}$codearray = array("error"=>$error,"errormessage"=> $code_error,"type"=>'activate');echo json_encode($codearray);}else if(isset($_POST['type']) && ($_POST['type']=='resend')){unset($_SESSION['resettime']);if(!isset($_SESSION['resettime'])){$_SESSION['resettime'] = time() + (60);$resendtime = 'yes';}if( time() > $_SESSION['resettime']){unset($_SESSION['resettime']);$resendtime = 'no';}if(!isset($_SESSION['counter_value'])){$_SESSION['counter_value'] = $counter;}else{$_SESSION['counter_value'] = $_SESSION['counter_value']+1;}$_SESSION["start"] = null;$_SESSION['start'] = time();unset($_SESSION['code_value']);unset($_SESSION['newcode_value']);if(!isset($_SESSION['code_value'])){$_SESSION['code_value'] = $_SESSION['start'] + (3600) ;$digits = 4;$_SESSION['newcode_value']  = str_pad(rand(0, pow(10, $digits)-1), $digits, '0', STR_PAD_LEFT);$resendcodemessage = 'The OTP code has been re-sent';}$now = time();if($now > $_SESSION['code_value']){unset($_SESSION['code_value']);unset($_SESSION['newcode_value']);}$codearray = array("counter"=>$_SESSION['counter_value'],"message"=> $_SESSION['newcode_value'],"type"=>'resend',"resendtime"=>$resendtime,"resendcodemessage"=>$resendcodemessage);echo json_encode($codearray);}?>